name: showmyworld-ci

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install pnpm dependency
        run: npm install -g pnpm

      - name: install dependencies
        run: pnpm install

      - name: run build
        run: pnpm build

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install pnpm dependency
        run: npm install -g pnpm

      - name: install dependencies
        run: pnpm install

      - name: run eslint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install pnpm dependenct
        run: npm install -g pnpm

      - name: install dependencies
        run: pnpm install

      - name: run test
        run: pnpm run test

  sonarqube:
    name: sonarqube
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install pnpm dependency
        run: npm install -g pnpm

      - name: install dependencies
        run: pnpm install

      - name: run sonarqube scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL}}
